-- MySQL Script generated by MySQL Workbench
-- Sex 24 Jul 2020 11:01:41 -03
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema catalogo_02
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `catalogo_02` ;

-- -----------------------------------------------------
-- Schema catalogo_02
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `catalogo_02` DEFAULT CHARACTER SET utf8 ;
USE `catalogo_02` ;

-- -----------------------------------------------------
-- Table `catalogo_02`.`satellite`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `catalogo_02`.`satellite` ;

CREATE TABLE IF NOT EXISTS `catalogo_02`.`satellite` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `catalogo_02`.`sensor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `catalogo_02`.`sensor` ;

CREATE TABLE IF NOT EXISTS `catalogo_02`.`sensor` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `catalogo_02`.`_scene`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `catalogo_02`.`_scene` ;

CREATE TABLE IF NOT EXISTS `catalogo_02`.`_scene` (
  `id` VARCHAR(45) NOT NULL,
  `path` INT NULL,
  `row` INT NULL,
  `date` DATE NULL,
  `thumbnail` VARCHAR(200) NULL,
  `start_time` DATETIME NULL,
  `center_time` DATETIME NULL,
  `stop_time` DATETIME NULL,
  `cloud_cover` INT NULL,
  `ingest_date` DATETIME NULL,
  `center_latitude` FLOAT NULL,
  `center_longitude` FLOAT NULL,
  `bl_latitude` FLOAT NULL,
  `bl_longitude` FLOAT NULL,
  `br_latitude` FLOAT NULL,
  `br_longitude` FLOAT NULL,
  `tl_latitude` FLOAT NULL,
  `tl_longitude` FLOAT NULL,
  `tr_latitude` FLOAT NULL,
  `tr_longitude` FLOAT NULL,
  `sync_loss` FLOAT NULL,
  PRIMARY KEY (`id`),
  INDEX `index_date` (`date` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `catalogo_02`.`country`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `catalogo_02`.`country` ;

CREATE TABLE IF NOT EXISTS `catalogo_02`.`country` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `catalogo_02`.`city`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `catalogo_02`.`city` ;

CREATE TABLE IF NOT EXISTS `catalogo_02`.`city` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `state` VARCHAR(45) NULL,
  `area_km2` FLOAT NULL,
  `latitude` VARCHAR(45) NULL,
  `longitude` VARCHAR(45) NULL,
  `country_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_city_country1_idx` (`country_id` ASC),
  CONSTRAINT `fk_city_country1`
    FOREIGN KEY (`country_id`)
    REFERENCES `catalogo_02`.`country` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `catalogo_02`.`address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `catalogo_02`.`address` ;

CREATE TABLE IF NOT EXISTS `catalogo_02`.`address` (
  `id` INT NOT NULL,
  `zip_code` VARCHAR(15) NULL,
  `street` VARCHAR(45) NULL,
  `number` INT NULL,
  `complement` VARCHAR(45) NULL,
  `city_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_address_city1_idx` (`city_id` ASC),
  CONSTRAINT `fk_address_city1`
    FOREIGN KEY (`city_id`)
    REFERENCES `catalogo_02`.`city` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `catalogo_02`.`company`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `catalogo_02`.`company` ;

CREATE TABLE IF NOT EXISTS `catalogo_02`.`company` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `type` VARCHAR(45) NULL DEFAULT 'publica',
  `operation` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `catalogo_02`.`type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `catalogo_02`.`type` ;

CREATE TABLE IF NOT EXISTS `catalogo_02`.`type` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `catalogo_02`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `catalogo_02`.`user` ;

CREATE TABLE IF NOT EXISTS `catalogo_02`.`user` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `login` VARCHAR(45) NULL,
  `cpf` VARCHAR(30) NULL,
  `email` VARCHAR(45) NULL,
  `phone` VARCHAR(30) NULL,
  `siape` VARCHAR(45) NULL COMMENT 'numero do servidor publico \nfederal o numero Ã© o siape\ntem estadual\ne municipal',
  `date` DATETIME NULL COMMENT 'registration date',
  `password` VARCHAR(45) NULL,
  `address_id` INT NOT NULL,
  `company_id` INT NOT NULL,
  `type_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `numeroservidor_UNIQUE` (`siape` ASC),
  INDEX `fk_user_address1_idx` (`address_id` ASC),
  INDEX `fk_user_company1_idx` (`company_id` ASC),
  INDEX `fk_user_type1_idx` (`type_id` ASC),
  CONSTRAINT `fk_user_address1`
    FOREIGN KEY (`address_id`)
    REFERENCES `catalogo_02`.`address` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_company1`
    FOREIGN KEY (`company_id`)
    REFERENCES `catalogo_02`.`company` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_type1`
    FOREIGN KEY (`type_id`)
    REFERENCES `catalogo_02`.`type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `catalogo_02`.`quality_control`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `catalogo_02`.`quality_control` ;

CREATE TABLE IF NOT EXISTS `catalogo_02`.`quality_control` (
  `id` INT NOT NULL,
  `date` DATETIME NULL,
  `observation` VARCHAR(45) NULL,
  `status` VARCHAR(2) NULL,
  `scene_id` VARCHAR(45) NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_quality_user1_idx` (`user_id` ASC),
  INDEX `fk_quality_scene1_idx` (`scene_id` ASC),
  CONSTRAINT `fk_quality_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `catalogo_02`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_quality_scene1`
    FOREIGN KEY (`scene_id`)
    REFERENCES `catalogo_02`.`_scene` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `catalogo_02`.`radiometric_processing`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `catalogo_02`.`radiometric_processing` ;

CREATE TABLE IF NOT EXISTS `catalogo_02`.`radiometric_processing` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `catalogo_02`.`geometric_processing`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `catalogo_02`.`geometric_processing` ;

CREATE TABLE IF NOT EXISTS `catalogo_02`.`geometric_processing` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `catalogo_02`.`_dataset`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `catalogo_02`.`_dataset` ;

CREATE TABLE IF NOT EXISTS `catalogo_02`.`_dataset` (
  `id` INT NOT NULL,
  `description` VARCHAR(45) NULL,
  `satellite_id` INT NOT NULL,
  `sensor_id` INT NOT NULL,
  `geometric_processing_id` INT NOT NULL,
  `radiometric_processing_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_dataset_tipo1_idx` (`radiometric_processing_id` ASC),
  INDEX `fk_dataset_satellite1_idx` (`satellite_id` ASC),
  INDEX `fk_dataset_sensor1_idx` (`sensor_id` ASC),
  UNIQUE INDEX `type_id_UNIQUE` (`radiometric_processing_id` ASC),
  UNIQUE INDEX `satellite_id_UNIQUE` (`satellite_id` ASC),
  UNIQUE INDEX `sensor_id_UNIQUE` (`sensor_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk__dataset_geometric_processing1_idx` (`geometric_processing_id` ASC),
  UNIQUE INDEX `geometric_processing_id_UNIQUE` (`geometric_processing_id` ASC),
  CONSTRAINT `fk_dataset_tipo1`
    FOREIGN KEY (`radiometric_processing_id`)
    REFERENCES `catalogo_02`.`radiometric_processing` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_dataset_satellite1`
    FOREIGN KEY (`satellite_id`)
    REFERENCES `catalogo_02`.`satellite` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_dataset_sensor1`
    FOREIGN KEY (`sensor_id`)
    REFERENCES `catalogo_02`.`sensor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__dataset_geometric_processing1`
    FOREIGN KEY (`geometric_processing_id`)
    REFERENCES `catalogo_02`.`geometric_processing` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `catalogo_02`.`location`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `catalogo_02`.`location` ;

CREATE TABLE IF NOT EXISTS `catalogo_02`.`location` (
  `id` INT NOT NULL,
  `ip` VARCHAR(15) NULL DEFAULT NULL,
  `longitude` FLOAT NULL DEFAULT NULL,
  `latitude` FLOAT NULL DEFAULT NULL,
  `city` VARCHAR(254) NULL DEFAULT NULL,
  `district` VARCHAR(254) NULL DEFAULT NULL,
  `region` VARCHAR(254) NULL DEFAULT NULL,
  `region_code` VARCHAR(2) NULL DEFAULT NULL,
  `country` VARCHAR(254) NULL DEFAULT NULL,
  `country_code` VARCHAR(2) NULL DEFAULT NULL,
  `continent` VARCHAR(254) NULL DEFAULT NULL,
  `continent_code` VARCHAR(2) NULL DEFAULT NULL,
  `zip_code` VARCHAR(15) NULL DEFAULT NULL,
  `time_zone` VARCHAR(254) NULL DEFAULT NULL,
  `timestamp` VARCHAR(45) NULL DEFAULT 'CURRENT_TIMESTAMP()',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `ip_UNIQUE` (`ip` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `catalogo_02`.`download`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `catalogo_02`.`download` ;

CREATE TABLE IF NOT EXISTS `catalogo_02`.`download` (
  `id` VARCHAR(45) NOT NULL,
  `date` DATETIME NULL,
  `scene_id` VARCHAR(45) NOT NULL,
  `dataset_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `location_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_download_user1_idx` (`user_id` ASC),
  INDEX `fk_download_scene1_idx` (`scene_id` ASC),
  INDEX `fk_download__dataset1_idx` (`dataset_id` ASC),
  INDEX `fk_download_location1_idx` (`location_id` ASC),
  CONSTRAINT `fk_download_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `catalogo_02`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_download_scene1`
    FOREIGN KEY (`scene_id`)
    REFERENCES `catalogo_02`.`_scene` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_download__dataset1`
    FOREIGN KEY (`dataset_id`)
    REFERENCES `catalogo_02`.`_dataset` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_download_location1`
    FOREIGN KEY (`location_id`)
    REFERENCES `catalogo_02`.`location` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `catalogo_02`.`_product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `catalogo_02`.`_product` ;

CREATE TABLE IF NOT EXISTS `catalogo_02`.`_product` (
  `id` INT NOT NULL,
  `processing_date` DATETIME NULL,
  `scene_id` VARCHAR(45) NOT NULL,
  `dataset_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_product_dataset1_idx` (`dataset_id` ASC),
  INDEX `fk__product_scene1_idx` (`scene_id` ASC),
  CONSTRAINT `fk_product_dataset1`
    FOREIGN KEY (`dataset_id`)
    REFERENCES `catalogo_02`.`_dataset` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__product_scene1`
    FOREIGN KEY (`scene_id`)
    REFERENCES `catalogo_02`.`_scene` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `catalogo_02`.`band`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `catalogo_02`.`band` ;

CREATE TABLE IF NOT EXISTS `catalogo_02`.`band` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `resolution` FLOAT NULL,
  `sensor_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_band_sensor1_idx` (`sensor_id` ASC),
  CONSTRAINT `fk_band_sensor1`
    FOREIGN KEY (`sensor_id`)
    REFERENCES `catalogo_02`.`sensor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `catalogo_02`.`satellite_has_sensor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `catalogo_02`.`satellite_has_sensor` ;

CREATE TABLE IF NOT EXISTS `catalogo_02`.`satellite_has_sensor` (
  `satellite_id` INT NOT NULL,
  `sensor_id` INT NOT NULL,
  INDEX `fk_satellite_has_sensor_satellite1_idx` (`satellite_id` ASC),
  INDEX `fk_satellite_has_sensor_sensor1_idx` (`sensor_id` ASC),
  CONSTRAINT `fk_satellite_has_sensor_satellite1`
    FOREIGN KEY (`satellite_id`)
    REFERENCES `catalogo_02`.`satellite` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_satellite_has_sensor_sensor1`
    FOREIGN KEY (`sensor_id`)
    REFERENCES `catalogo_02`.`sensor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `catalogo_02`.`product_band`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `catalogo_02`.`product_band` ;

CREATE TABLE IF NOT EXISTS `catalogo_02`.`product_band` (
  `product_id` INT NOT NULL,
  `band_id` INT NOT NULL,
  `filename` VARCHAR(200) NULL,
  INDEX `fk_product_band__product1_idx` (`product_id` ASC),
  INDEX `fk_product_band_band1_idx` (`band_id` ASC),
  CONSTRAINT `fk_product_band__product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `catalogo_02`.`_product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_product_band_band1`
    FOREIGN KEY (`band_id`)
    REFERENCES `catalogo_02`.`band` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `catalogo_02` ;

-- -----------------------------------------------------
-- Placeholder table for view `catalogo_02`.`dataset`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `catalogo_02`.`dataset` (`id` INT, `name` INT, `description` INT, `satellite` INT, `sensor` INT, `geometric_processing` INT, `radiometric_processing` INT);

-- -----------------------------------------------------
-- Placeholder table for view `catalogo_02`.`stac_collection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `catalogo_02`.`stac_collection` (`id` INT, `name` INT, `description` INT, `start_date` INT, `end_date` INT, `min_y` INT, `min_x` INT, `max_x` INT, `max_y` INT);

-- -----------------------------------------------------
-- Placeholder table for view `catalogo_02`.`stac_item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `catalogo_02`.`stac_item` (`id` INT, `collection` INT, `date` INT, `path` INT, `row` INT, `cloud_cover` INT, `satellite` INT, `sensor` INT, `sync_loss` INT, `thumbnail` INT, `assets` INT, `tl_longitude` INT, `tl_latitude` INT, `bl_longitude` INT, `bl_latitude` INT, `br_longitude` INT, `br_latitude` INT, `tr_longitude` INT, `tr_latitude` INT);

-- -----------------------------------------------------
-- Placeholder table for view `catalogo_02`.`product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `catalogo_02`.`product` (`id` INT, `resolution` INT, `processing_date` INT, `filename` INT, `band` INT, `satellite` INT, `sensor` INT, `geometric_processing` INT, `radiometric_processing` INT, `scene_id` INT, `dataset_id` INT);

-- -----------------------------------------------------
-- Placeholder table for view `catalogo_02`.`scene`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `catalogo_02`.`scene` (`id` INT, `path` INT, `row` INT, `date` INT, `thumbnail` INT, `start_time` INT, `center_time` INT, `stop_time` INT, `cloud_cover` INT, `ingest_date` INT, `center_latitude` INT, `center_longitude` INT, `bl_latitude` INT, `bl_longitude` INT, `br_latitude` INT, `br_longitude` INT, `tl_latitude` INT, `tl_longitude` INT, `tr_latitude` INT, `tr_longitude` INT, `sync_loss` INT, `satellite` INT, `sensor` INT);

-- -----------------------------------------------------
-- View `catalogo_02`.`dataset`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `catalogo_02`.`dataset` ;
DROP TABLE IF EXISTS `catalogo_02`.`dataset`;
USE `catalogo_02`;
CREATE OR REPLACE VIEW `dataset` AS
    SELECT 
        d.id id,
        CONCAT(se.name, '_', sr.name, '_', g.name, '_', r.name) name,
        d.description description,
        se.name satellite,
        sr.name sensor,
        g.name geometric_processing,
        r.name radiometric_processing
    FROM
        _dataset d,
        satellite se,
        sensor sr,
        geometric_processing g,
        radiometric_processing r
    WHERE
        d.satellite_id = se.id
            AND d.sensor_id = sr.id
            AND d.geometric_processing_id = g.id
            AND d.radiometric_processing_id = r.id
    ORDER BY d.id;

-- -----------------------------------------------------
-- View `catalogo_02`.`stac_collection`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `catalogo_02`.`stac_collection` ;
DROP TABLE IF EXISTS `catalogo_02`.`stac_collection`;
USE `catalogo_02`;
CREATE OR REPLACE VIEW `stac_collection` AS
    SELECT 
        d.id id,
        d.name name,
        d.description description,
        MIN(s.date) start_date,
        MAX(s.date) end_date,
        MIN(s.bl_latitude) min_y,
        MIN(s.bl_latitude) min_x,
        MAX(s.tr_latitude) max_x,
        MAX(s.tr_longitude) max_y
    FROM
        _scene s,
        _product p,
        dataset d
    WHERE
        s.id = p.scene_id
            AND d.id = p.dataset_id
    GROUP BY d.name
    ORDER BY d.name;

-- -----------------------------------------------------
-- View `catalogo_02`.`stac_item`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `catalogo_02`.`stac_item` ;
DROP TABLE IF EXISTS `catalogo_02`.`stac_item`;
USE `catalogo_02`;
CREATE OR REPLACE VIEW `stac_item` AS
    SELECT 
        s.id,
        d.name collection,
        s.date,
        s.path,
        s.row,
        s.cloud_cover,        
        s.satellite,
        s.sensor,
        s.sync_loss,
        s.thumbnail thumbnail,
        CONCAT('[',
                GROUP_CONCAT(
					CONCAT('{"band": "', p.band, '", "href": "', p.filename, '"}')
                ), 
                ']') assets,
        s.tl_longitude,
        s.tl_latitude,
        s.bl_longitude,
        s.bl_latitude,
        s.br_longitude,
        s.br_latitude,
        s.tr_longitude,
        s.tr_latitude
    FROM
        scene s,
        product p,
        dataset d
    WHERE
        s.id = p.scene_id
            AND p.dataset_id = d.id
    GROUP BY s.id
    ORDER BY s.date DESC, s.id ASC;

-- -----------------------------------------------------
-- View `catalogo_02`.`product`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `catalogo_02`.`product` ;
DROP TABLE IF EXISTS `catalogo_02`.`product`;
USE `catalogo_02`;
CREATE OR REPLACE VIEW `product` AS
    SELECT 
        p.id id,
        p.resolution resolution,
        p.processing_date processing_date,
        p.filename filename,
        b.name band,
        d.satellite satellite,
        d.sensor sensor,
        d.geometric_processing geometric_processing,
        d.radiometric_processing radiometric_processing,
        s.id scene_id,
        p.dataset_id dataset_id
    FROM
        _product p,
        _scene s,
        band b,
        dataset d
    WHERE
        p.scene_id = s.id 
			AND p.band_id = b.id
            AND p.dataset_id = d.id
    ORDER BY p.processing_date DESC, p.id ASC;

-- -----------------------------------------------------
-- View `catalogo_02`.`scene`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `catalogo_02`.`scene` ;
DROP TABLE IF EXISTS `catalogo_02`.`scene`;
USE `catalogo_02`;
CREATE  OR REPLACE VIEW `scene` AS
    SELECT 
        s.*, p.satellite, p.sensor
    FROM
        _scene s,
        product p
    WHERE
        s.id = p.scene_id
    GROUP BY s.id;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
